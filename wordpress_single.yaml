heat_template_version: 2013-05-23

description: >
  Heat wordpress on ubuntu
parameters:
  key_name:
    type: string
    description : Name of a KeyPair to enable SSH access to the instance
    default: demo-key
  instance_type:
    type: string
    description: Instance type for WordPress server
    default: m1.small
    constraints:
      - allowed_values: [m1.small, m1.medium, m1.large]
        description: instance_type must be one of m1.small, m1.medium or m1.large
  image_id:
    type: string
    description: >
      Image for the instance
    default: ubuntu-trusty-amd64

  db_name:
    type: string
    description: WordPress database name
    default: wordpress
    constraints:
      - length: { min: 1, max: 64 }
        description: db_name must be between 1 and 64 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_name must begin with a letter and contain only alphanumeric
          characters
  db_username:
    type: string
    description: The WordPress database admin account username
    default: admin
    hidden: true
    constraints:
      - length: { min: 1, max: 16 }
        description: db_username must be between 1 and 16 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_username must begin with a letter and contain only alphanumeric
          characters  
  public_network:
    type: string
    description: ext-net ID
    default: bcba8d4e-d303-44b9-9100-3d7512e9922e
  public_subnet:
    type: string
    description: subnet
    default: ab5c0c1c-906f-4a38-96ff-e8d9e71db79a
  private_network:
    type: string
    label: Private network name or ID
    description: demo-net ID
    default: f1eb03cb-dcc8-40b5-ac82-288fefe1e5dd

resources:
  root_password:
    type: OS::Heat::RandomString
    properties:
      length: 12
  wordpress_password:
    type: OS::Heat::RandomString
    properties:
      length: 15
  wordpress_security_group:
    type: AWS::EC2::SecurityGroup
    properties:
      SecurityGroupIngress: [{IpProtocol: tcp, FromPort: "80", ToPort: "80",CidrIp: "0.0.0.0/0"}]
      GroupDescription: Security group to allow http port
  public_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: public_network }
      security_groups:
        - { get_resource: wordpress_security_group }

  wordpress_instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: public_port }
        - network: { get_param: private_network }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v

            echo root:"root_password" | /usr/sbin/chpasswd
            apt-get -y update
            apt-get -y install apache2 wordpress mariadb-server

            # Setup MySQL root password and create a user
            mysqladmin -u root password db_rootpassword
            cat << EOF | mysql -u root --password=db_rootpassword
            CREATE DATABASE db_name;
            GRANT ALL PRIVILEGES ON db_name.* TO "db_user"@"localhost"
            IDENTIFIED BY "db_password";
            FLUSH PRIVILEGES;
            EXIT
            EOF

            sed -i "/Deny from All/d" /etc/httpd/conf.d/wordpress.conf
            sed -i "s/Require local/Require all granted/" /etc/httpd/conf.d/wordpress.conf
            sed -i s/database_name_here/db_name/ /etc/wordpress/wp-config.php
            sed -i s/username_here/db_user/ /etc/wordpress/wp-config.php
            sed -i s/password_here/db_password/ /etc/wordpress/wp-config.php

            service apache2 start
          params:
            db_rootpassword: { get_resource: root_password }
            db_name: { get_param: db_name }
            db_user: { get_param: db_username }
            db_password: { get_resource: wordpress_password }

outputs:
  system_password:
    description: Root and MySQL password
    value: { get_resource: root_password }
  service_password:
    description: Wordpress db password
    value: { get_resource: wordpress_password }
  private_address:
    description: server private address
    value: { get_attr: [wordpress_instance, networks] }
  single_console_type:
    value: { get_attr: wordpress_instance, console_urls, novnc }
    description: console URL for the server (novnc in this case)