heat_template_version: 2013-05-23

description: This template deploy an instance to provide a html presentation

parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for compute instance
    default: ubuntu-trusty-amd64
  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used
    default: m1.small
  key_name:
    type: string
    label: Key name
    description: Name of key-pair to be used for compute instance
    default: heat-instances-key
  private_network:
    type: string
    label: Private network name or ID
    description: Network to attach instance to.
    default: demo-net
  floating_ip_id:
    type: string
    label: Floating IP ID
    description: Floating ip adress. $ neutron floatingip-list
    default: 571688e3-62c9-4dd6-95f0-d091fac74992
  ec2-user_password:
    type: string
    label: Modified root password
    default: popito225
    hidden: true
  instance_name:
    type: string
    label: Instance name
    default: presinstance

resources:  
  
  root_password:
    type: OS::Heat::RandomString
    properties:
      length: 10

  pres_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: tcp
          remote_ip_prefix: 192.168.17.1/24
          port_range_min: 8140
          port_range_max: 8140
        - protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 80
          port_range_max: 80
        - protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 22
          port_range_max: 22


  private_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: private_network }
      security_groups:
        - default        
        - { get_resource: pres_secgroup }

  presentation_instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      admin_pass: { get_resource: root_password }
      flavor: { get_param: flavor }
      name: { get_param: instance_name }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: private_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v

            ## prevent ssh connection
            service ssh stop

            ## hostname in /etc/hosts
            ## we use bash to avoid heat circular dependencies if we tried to get the ip address with get_attr instead
            ## we would have done this into the current template : { get_attr: [presentation_instance, first_address] }
            echo "$(ifconfig eth0|awk -F':' '/inet addr/ {print $2}'|awk '{print $1}') $INSTANCE_NAME" >> /etc/hosts
            echo '192.168.17.56 puppetmaster.openstacklocal' >> /etc/hosts

            ## Prepare puppet
            curl -O https://apt.puppetlabs.com/puppetlabs-release-trusty.deb
            dpkg -i puppetlabs-release-trusty.deb
            export LC_ALL=en_US.UTF-8

            ## Refresh apt cache
            apt-get -y update

            #Install packages
            apt-get -y install puppet

            # configure puppet.conf file
            echo '[agent]' >> /etc/puppet/puppet.conf
            echo 'server = puppetmaster.openstacklocal' >> /etc/puppet/puppet.conf
            puppet agent --enable
            puppet agent --verbose --no-daemonize --onetime


            # restarting puppet and turning on ssh service after configuration is done
            puppet agent --verbose 
            service ssh start            
          params:
            "$USER_PASSWORD": { get_resource: root_password }
            "$INSTANCE_NAME": { get_param: instance_name }
  
  association:
     type: OS::Neutron::FloatingIPAssociation
     properties:
       floatingip_id: { get_param: floating_ip_id }
       port_id: {get_attr: [presentation_instance, addresses, {get_param: private_network}, 0, port]}

outputs:
  presentation_url:
    description: URL de la presentation déployée sur apache
    value:
      str_replace:
        template: >
          http://host/
        params:
          host: { get_attr: [presentation_instance, first_address] }
  instance_name:
    description: Name of the instance
    value: { get_attr: [presentation_instance, name] }
  instance_ips:
    description: IP addresses of the instance
    value: { get_attr: [presentation_instance, addresses] }
  root_password:
    description: Autogenerated value (in theory) of the root password
    value: { get_resource: root_password }
